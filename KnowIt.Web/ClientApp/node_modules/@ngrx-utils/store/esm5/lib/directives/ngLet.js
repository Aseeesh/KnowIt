/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ngLet.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Directive, Input, TemplateRef, ViewContainerRef, } from '@angular/core';
var NgLetContext = /** @class */ (function () {
    function NgLetContext() {
        this.$implicit = null;
        this.ngLet = null;
    }
    return NgLetContext;
}());
export { NgLetContext };
if (false) {
    /** @type {?} */
    NgLetContext.prototype.$implicit;
    /** @type {?} */
    NgLetContext.prototype.ngLet;
}
var NgLetDirective = /** @class */ (function () {
    function NgLetDirective(_vcr, _templateRef) {
        this._vcr = _vcr;
        this._templateRef = _templateRef;
        this._context = new NgLetContext();
    }
    Object.defineProperty(NgLetDirective.prototype, "ngLet", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._context.$implicit = this._context.ngLet = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgLetDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this._vcr.createEmbeddedView(this._templateRef, this._context);
    };
    NgLetDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ngLet]',
                },] }
    ];
    /** @nocollapse */
    NgLetDirective.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: TemplateRef }
    ]; };
    NgLetDirective.propDecorators = {
        ngLet: [{ type: Input }]
    };
    return NgLetDirective;
}());
export { NgLetDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgLetDirective.prototype._context;
    /**
     * @type {?}
     * @private
     */
    NgLetDirective.prototype._vcr;
    /**
     * @type {?}
     * @private
     */
    NgLetDirective.prototype._templateRef;
}
var NgLetModule = /** @class */ (function () {
    function NgLetModule() {
    }
    NgLetModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NgLetDirective],
                    exports: [NgLetDirective],
                },] }
    ];
    return NgLetModule;
}());
export { NgLetModule };
//# sourceMappingURL=ngLet.js.map